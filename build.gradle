plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.pocketchat'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework:spring-websocket'

    compile('javax.xml.bind:jaxb-api') // Create compatibility with Java 8 libraries if this project is compiled with Java 11 or 13*

    compileOnly 'org.projectlombok:lombok'
    implementation 'org.apache.kafka:kafka-streams'
    implementation "org.webjars:stomp-websocket:2.3.3"
    implementation "org.webjars:sockjs-client:1.0.2"
    implementation 'com.google.code.gson:gson'
    implementation "joda-time:joda-time"
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
